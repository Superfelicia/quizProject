{"ast":null,"code":"var _jsxFileName = \"/Users/fellan/dev/quizProject/frontend/src/pages/Quiz.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const url = 'https://ccee-82-196-111-182.ngrok-free.app';\n  const headers = new Headers();\n  headers.append('ngrok-skip-browser-warning', 'true');\n  const [questions, setQuestions] = useState(null);\n  const [activeQuestion, setActiveQuestion] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [selectedAnswerIndex, setSelectedAnswerIndex] = useState(null);\n  const [result, setResult] = useState([]);\n  const [isFinished, setIsFinished] = useState(false);\n  const [score, setScore] = useState(0);\n  const [quizAnswers, setQuizAnswers] = useState(null);\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await fetch(url + '/getQuestions', {\n          headers\n        });\n        const data = await response.json();\n        return data;\n      } catch (error) {\n        console.error(error);\n        return null;\n      }\n    };\n    //Anropa fetchQuestions direkt i useEffect och handle result\n    (async () => {\n      const dataQuestions = await fetchQuestions();\n      if (dataQuestions !== null) {\n        setQuestions(dataQuestions);\n      }\n    })();\n  }, []);\n  console.log(questions);\n  useEffect(() => {\n    console.log(score);\n  }, [score]);\n  const renderQuestion = () => {\n    if (activeQuestion >= (questions === null || questions === void 0 ? void 0 : questions.length)) {\n      return 'No more questions';\n    } else {\n      return questions[activeQuestion].question;\n    }\n  };\n  const onClickNext = () => {\n    if (activeQuestion <= (questions === null || questions === void 0 ? void 0 : questions.length) - 2) {\n      setActiveQuestion(prevActiveQuestion => prevActiveQuestion + 1);\n      const nextQuestionIndex = activeQuestion + 1;\n      setActiveQuestion(nextQuestionIndex);\n      setSelectedAnswer(null);\n      setSelectedAnswerIndex(null);\n    }\n  };\n\n  //returnera correctAnswer på question\n  const checkCorrectAnswer = (questionId, answer) => {\n    const question = questions.find(q => q.id === parseInt(questionId));\n    if (!question) {\n      // Om frågan inte finns i questions-arrayen, return false\n      return false;\n    }\n    return question.correctAnswer === answer.trim();\n  };\n  const onSelectedAnswer = (answer, index) => {\n    setSelectedAnswer(answer);\n    setSelectedAnswerIndex(index);\n    setResult(prevResult => ({\n      ...prevResult,\n      [questions[activeQuestion].id]: {\n        answer: answer.trim(),\n        //lägg till användarens val\n        questionId: questions[activeQuestion].id // lägg till questionId\n      }\n    }));\n  };\n\n  const onFinishedClick = async () => {\n    setQuizAnswers(null);\n    setIsFinished(true);\n    try {\n      fetch(url + '/postQuizAnswers', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          result\n        })\n      });\n    } catch (error) {\n      console.log('Error:', error);\n    }\n    try {\n      const response = await fetch(url + '/getQuizAnswers', {\n        headers\n      });\n      const dataAnswers = await response.json();\n      setQuizAnswers(dataAnswers);\n    } catch (error) {\n      console.log('Error:', error);\n    }\n  };\n\n  // gå igenom array när result är satt\n  const calculateScore = () => {\n    let correctAnswers = 0;\n    for (const question of questions) {\n      var _result$questionId;\n      console.log(question);\n      const questionId = question.id;\n      const userAnswer = (_result$questionId = result[questionId]) === null || _result$questionId === void 0 ? void 0 : _result$questionId.answer;\n      if (userAnswer) {\n        const isCorrect = checkCorrectAnswer(questionId, userAnswer);\n        if (isCorrect) {\n          correctAnswers++;\n        }\n      }\n    }\n    console.log(correctAnswers);\n    return correctAnswers;\n  };\n  useEffect(() => {\n    if (result && questions) {\n      const newScore = calculateScore();\n      setScore(newScore);\n    }\n  }, [result, questions]);\n  const quizIsFinished = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"End of quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"question\",\n          children: \"Score\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"score-text\",\n          children: [score, \" / 4\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: quizAnswers && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"score-answers score-text\",\n            children: \"Quiz answers:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n            className: \"answers-list score-text\",\n            children: quizAnswers.map(answerData => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: checkCorrectAnswer(answerData.questionId, answerData.answer) ? 'correct-answer score-text' : 'wrong-answer score-text',\n                children: answerData.answer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 41\n              }, this)\n            }, answerData.questionId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"display-container\",\n    children: (questions === null || questions === void 0 ? void 0 : questions.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isFinished ? quizIsFinished() : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Quiz\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-container\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"question\",\n            children: renderQuestion()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: questions[activeQuestion].option.split(',').map((el, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"option-container\",\n            onClick: () => onSelectedAnswer(el, index, selectedAnswer),\n            className: index === selectedAnswerIndex ? 'selected-answer' : null,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"option-text\",\n              children: el\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 45\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 41\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"next-button\",\n          disabled: selectedAnswerIndex === null,\n          onClick: activeQuestion >= (questions === null || questions === void 0 ? void 0 : questions.length) - 1 ? onFinishedClick : onClickNext,\n          children: activeQuestion === (questions === null || questions === void 0 ? void 0 : questions.length) - 1 ? 'Finish' : 'Next'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 9\n  }, this);\n};\n_s(Quiz, \"zp29Q1JIhQJDHp28oudwNWRu9qQ=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Quiz","_s","url","headers","Headers","append","questions","setQuestions","activeQuestion","setActiveQuestion","selectedAnswer","setSelectedAnswer","selectedAnswerIndex","setSelectedAnswerIndex","result","setResult","isFinished","setIsFinished","score","setScore","quizAnswers","setQuizAnswers","fetchQuestions","response","fetch","data","json","error","console","dataQuestions","log","renderQuestion","length","question","onClickNext","prevActiveQuestion","nextQuestionIndex","checkCorrectAnswer","questionId","answer","find","q","id","parseInt","correctAnswer","trim","onSelectedAnswer","index","prevResult","onFinishedClick","method","body","JSON","stringify","dataAnswers","calculateScore","correctAnswers","_result$questionId","userAnswer","isCorrect","newScore","quizIsFinished","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","answerData","option","split","el","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/fellan/dev/quizProject/frontend/src/pages/Quiz.js"],"sourcesContent":["import {useEffect, useState} from \"react\"\n\nconst Quiz = () => {\n    const url = 'https://ccee-82-196-111-182.ngrok-free.app';\n    const headers = new Headers();\n    headers.append('ngrok-skip-browser-warning', 'true');\n    const [questions, setQuestions] = useState(null);\n    const [activeQuestion, setActiveQuestion] = useState(0);\n    const [selectedAnswer, setSelectedAnswer] = useState(null);\n    const [selectedAnswerIndex, setSelectedAnswerIndex] = useState(null);\n    const [result, setResult] = useState([]);\n    const [isFinished, setIsFinished] = useState(false);\n    const [score, setScore] = useState(0);\n    const [quizAnswers, setQuizAnswers] = useState(null);\n\n    useEffect(() => {\n        const fetchQuestions = async () => {\n            try {\n                const response = await fetch(url + '/getQuestions', {headers});\n                const data = await response.json();\n                return data;\n            } catch (error) {\n                console.error(error)\n                return null\n            }\n        }\n        //Anropa fetchQuestions direkt i useEffect och handle result\n        (async () => {\n            const dataQuestions = await fetchQuestions()\n            if (dataQuestions !== null) {\n                setQuestions(dataQuestions)\n            }\n        })()\n    }, [])\n\n    console.log(questions);\n\n    useEffect(() => {\n        console.log(score)\n    }, [score])\n\n    const renderQuestion = () => {\n        if (activeQuestion >= questions?.length) {\n            return 'No more questions';\n        } else {\n            return questions[activeQuestion].question;\n        }\n    }\n\n    const onClickNext = () => {\n        if (activeQuestion <= questions?.length - 2) {\n            setActiveQuestion(prevActiveQuestion => prevActiveQuestion + 1);\n            const nextQuestionIndex = activeQuestion + 1;\n\n            setActiveQuestion(nextQuestionIndex);\n            setSelectedAnswer(null);\n            setSelectedAnswerIndex(null);\n        }\n    }\n\n    //returnera correctAnswer på question\n    const checkCorrectAnswer = (questionId, answer) => {\n        const question = questions.find((q) => q.id === parseInt(questionId));\n        if (!question) {\n            // Om frågan inte finns i questions-arrayen, return false\n            return false;\n        }\n        return question.correctAnswer === answer.trim();\n    }\n\n    const onSelectedAnswer = (answer, index) => {\n        setSelectedAnswer(answer);\n        setSelectedAnswerIndex(index);\n\n        setResult(prevResult => ({\n            ...prevResult,\n            [questions[activeQuestion].id]: {\n                answer: answer.trim(), //lägg till användarens val\n                questionId: questions[activeQuestion].id, // lägg till questionId\n            },\n        }));\n    }\n\n    const onFinishedClick = async () => {\n        setQuizAnswers(null)\n        setIsFinished(true)\n        try {\n            fetch(url + '/postQuizAnswers', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    result,\n                }),\n            })\n        } catch (error) {\n            console.log('Error:', error)\n        }\n        try {\n            const response = await fetch(url + '/getQuizAnswers', {headers})\n            const dataAnswers = await response.json()\n            setQuizAnswers(dataAnswers)\n        } catch (error) {\n            console.log('Error:', error)\n        }\n    }\n\n    // gå igenom array när result är satt\n    const calculateScore = () => {\n        let correctAnswers = 0\n        for (const question of questions) {\n            console.log(question)\n            const questionId = question.id\n            const userAnswer = result[questionId]?.answer\n            if (userAnswer) {\n                const isCorrect = checkCorrectAnswer(questionId, userAnswer)\n                if (isCorrect) {\n                    correctAnswers++\n                }\n            }\n        }\n        console.log(correctAnswers)\n        return correctAnswers\n    }\n\n    useEffect(() => {\n        if (result && questions) {\n            const newScore = calculateScore()\n            setScore(newScore)\n        }\n    }, [result, questions])\n\n\n    const quizIsFinished = () => {\n        return (\n            <>\n                <div className=\"header\">\n                    <h4>End of quiz</h4>\n                </div>\n                <div className=\"question-container\">\n                    <span className=\"question\">Score</span>\n                    <p className='score-text'>{score} / 4</p>\n                </div>\n                <div>\n                    {quizAnswers && (\n                        <div>\n                            <h5 className='score-answers score-text'>Quiz answers:</h5>\n                            <ol className='answers-list score-text'>\n                                {quizAnswers.map((answerData) => (\n                                    <li key={answerData.questionId}>\n                                        <p className={checkCorrectAnswer(answerData.questionId, answerData.answer) ?\n                                            'correct-answer score-text' : 'wrong-answer score-text'}>\n                                            {answerData.answer}\n                                        </p>\n                                    </li>\n                                ))}\n                            </ol>\n                        </div>\n                    )}\n                </div>\n            </>\n        );\n    }\n\n    return (\n        <div className=\"display-container\">\n            {questions?.length > 0 &&\n                <div>\n                    {isFinished ? quizIsFinished() : (\n                        <>\n                            <div className=\"header\">\n                                <div>\n                                    <h4>Quiz</h4>\n                                </div>\n                            </div>\n                            <div className=\"question-container\">\n                                <span className=\"question\">{renderQuestion()}</span>\n                            </div>\n                            <div className=\"container\">\n                                {\n                                    questions[activeQuestion].option.split(',').map((el, index) => (\n                                        <div id=\"option-container\"\n                                             onClick={() => onSelectedAnswer(el, index, selectedAnswer)}\n                                             className={index === selectedAnswerIndex ? 'selected-answer' : null}\n                                             key={index}>\n                                            <div className='option-text'>\n                                                {el}\n                                            </div>\n                                        </div>\n                                    ))\n                                }\n                            </div>\n                            <button className=\"next-button\" disabled={selectedAnswerIndex === null}\n                                    onClick={activeQuestion >= questions?.length - 1 ? onFinishedClick : onClickNext}>{activeQuestion === questions?.length - 1 ? 'Finish' : 'Next'}\n                            </button>\n                        </>\n                    )}\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default Quiz;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}